{"version":3,"sources":["theme/theme.js","hooks/useMetamask.js","components/AddressLabel.js","components/Button.js","components/Header.js","contracts/Counter.sol","routes/routes.js","hooks/useContractDeployment.js","components/Loader.js","routes/DeployContractPage.js","hooks/useCounterContract.js","components/CounterDisplay.js","components/ContractEvents.js","routes/ContractPage.js","App.js","index.js"],"names":["customMuiTheme","responsiveFontSizes","createTheme","palette","mode","useMetamask","useState","metamaskInstance","setMetamaskInstance","userAddress","setUserAddress","connectToMetamask","useCallback","a","window","ethereum","request","method","accounts","params","chainId","Web3","currentProvider","on","eth","getAccounts","then","useEffect","isMetamaskDefined","isMetaMask","userAddressDetailsUrl","process","AddressLabel","address","ariaLabel","etherscanLink","showCopyIntoClipboardButton","iconSize","addressLabel","useMemo","firstPart","slice","lastPart","ADDRESS_LENGTH","Stack","direction","justifyContent","alignItems","spacing","component","Tooltip","title","IconButton","color","href","target","rel","style","marginLeft","fontSize","onClick","navigator","clipboard","writeText","StyledButton","styled","ButtonMui","margin","Button","children","variant","Header","HeaderContainer","StyledToolbar","Typography","AppBar","height","Toolbar","display","maxWidth","width","BASE_PATHNAME","DEPLOY_CONTRACT_PATH","HOME_PATH","useContractDeployment","navigate","useNavigate","transactionDeploymentHash","setTransactionDeploymentHash","contractAddress","setContractAddress","deployContract","Contract","CounterContractJSON","abi","deploy","data","bytecode","send","from","error","console","log","receipt","newContractInstance","options","isDeploymentLoading","transactionDeploymentUrl","Loader","LoaderContainer","CircularProgress","LabelContainer","shouldForwardProp","prop","props","flexDirection","marginTop","DeployContractPage","contractCode","setContractCode","fetch","contractFile","r","text","StyledPaper","CodeContainer","lang","Paper","padding","textAlign","backgroundColor","borderRadius","border","useCounterContract","counterContract","setCounterContract","counter","setCounter","pastEvents","setPastEvents","newEvents","setNewEvents","updateCounter","methods","call","getPastContractEvents","getPastEvents","fromBlock","toBlock","events","reverse","e","incrementCounter","increment","transactionHash","newEvent","id","isPending","returnValues","eventType","decrementCounter","decrement","resetCounter","reset","allEvents","event","filteredEvents","filter","isCounterContractLoading","contractDetailsUrl","CounterDisplay","CounterLabel","theme","grey","borderColor","divider","ContractEvents","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","map","size","LabelByMethod","PendingValue","IncrementLabel","success","dark","contrastText","DecrementLabel","warning","main","ResetLabel","PendingValueLabel","light","ContractPage","useSearchParams","searchParams","setSearchParams","get","contractAddressInput","setContractAddressInput","utils","isAddress","StyledContainer","TextField","value","onChange","label","fullWidth","StyledText","StyledInternalLink","to","StyledCounterContainer","elevation","gutterBottom","Link","App","AppContainer","path","element","replace","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.f5c562eb.chunk.js","sourcesContent":["import { createTheme, responsiveFontSizes } from \"@mui/material/styles\";\n\nconst theme = {\n  palette: {\n    mode: \"dark\",\n  },\n};\n\nconst customMuiTheme = responsiveFontSizes(createTheme(theme));\n\nexport default customMuiTheme;\n","import { useState, useEffect, useCallback } from \"react\";\nimport Web3 from \"web3\";\n\nconst RINKEBY_CHAIN_ID = \"0x4\";\n\n// TODO: use recommended initialization\n// see: https://docs.metamask.io/guide/ethereum-provider.html#using-the-provider\n\nfunction useMetamask() {\n  const [metamaskInstance, setMetamaskInstance] = useState();\n  const [userAddress, setUserAddress] = useState();\n\n  const connectToMetamask = useCallback(async () => {\n    if (!window.ethereum) {\n      return;\n    }\n\n    // connect metamask\n    const accounts = await window.ethereum.request({\n      method: \"eth_requestAccounts\",\n    });\n\n    // select correct chain\n    await window.ethereum.request({\n      method: \"wallet_switchEthereumChain\",\n      params: [{ chainId: RINKEBY_CHAIN_ID }],\n    });\n\n    const userAddress = accounts[0];\n\n    const metamaskInstance = new Web3(window.ethereum);\n\n    setMetamaskInstance(metamaskInstance);\n    setUserAddress(userAddress);\n\n    // subscribe to accountsChanged event to update the current user address\n    metamaskInstance.currentProvider.on(\"accountsChanged\", () => {\n      metamaskInstance.eth.getAccounts().then((userAddress) => {\n        setUserAddress(userAddress[0]);\n      });\n    });\n\n    metamaskInstance.currentProvider.on(\"disconnect\", () => {\n      setUserAddress();\n      setMetamaskInstance();\n    });\n\n    return () => {\n      setUserAddress();\n      setMetamaskInstance();\n    };\n  }, []);\n\n  // Initialize Metamask instance if its present in the browser\n  useEffect(() => {\n    connectToMetamask();\n  }, [connectToMetamask]);\n\n  const isMetamaskDefined =\n    metamaskInstance?.currentProvider.isMetaMask && !!userAddress;\n\n  const userAddressDetailsUrl = `${process.env.REACT_APP_ETHERSCAN_URL}/address/${userAddress}`;\n\n  return {\n    metamaskInstance,\n    userAddress,\n    isMetamaskDefined,\n    userAddressDetailsUrl,\n    connectToMetamask,\n  };\n}\n\nexport default useMetamask;\n","import { useMemo } from \"react\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Stack from \"@mui/material/Stack\";\nimport IosShareIcon from \"@mui/icons-material/IosShare\";\nimport ContentCopyIcon from \"@mui/icons-material/ContentCopy\";\n\nconst ADDRESS_LENGTH = 42;\n\n// TODO: Support chain short name\n\nfunction AddressLabel({\n  address,\n  ariaLabel,\n  etherscanLink,\n  showCopyIntoClipboardButton,\n  iconSize,\n}) {\n  const addressLabel = useMemo(() => {\n    if (address) {\n      const firstPart = address.slice(0, 6);\n      const lastPart = address.slice(ADDRESS_LENGTH - 6);\n\n      return `${firstPart}...${lastPart}`;\n    }\n\n    return address;\n  }, [address]);\n\n  return (\n    <Stack\n      direction=\"row\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      spacing={2}\n      component=\"span\"\n    >\n      <Tooltip title={address}>\n        <span>{addressLabel}</span>\n      </Tooltip>\n\n      {/* Button to etherscan */}\n      {etherscanLink && (\n        <Tooltip title={`Show ${ariaLabel} details on Etherscan`}>\n          <IconButton\n            color=\"primary\"\n            aria-label={`Show ${ariaLabel} details on Etherscan`}\n            component=\"a\"\n            href={etherscanLink}\n            target=\"_blank\"\n            rel=\"noopener\"\n            style={{ marginLeft: 0 }}\n          >\n            <IosShareIcon fontSize={iconSize || \"small\"} />\n          </IconButton>\n        </Tooltip>\n      )}\n\n      {/* Button to Copy into clipboard */}\n      {showCopyIntoClipboardButton && (\n        <Tooltip title={`Copy ${ariaLabel} to clipboard`}>\n          <IconButton\n            color=\"primary\"\n            aria-label={`Copy ${ariaLabel} to clipboard`}\n            style={{ marginLeft: 0 }}\n            onClick={() => navigator?.clipboard?.writeText?.(address)}\n          >\n            <ContentCopyIcon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Stack>\n  );\n}\n\nexport default AddressLabel;\n","import ButtonMui from \"@mui/material/Button\";\nimport { styled } from \"@mui/system\";\n\nconst StyledButton = styled(ButtonMui)({\n  margin: 8,\n});\n\nfunction Button({ onClick, children }) {\n  return (\n    <StyledButton onClick={onClick} variant=\"contained\">\n      {children}\n    </StyledButton>\n  );\n}\n\nexport default Button;\n","import AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\n\nimport { styled } from \"@mui/system\";\n\nimport AddressLabel from \"./AddressLabel\";\nimport Button from \"./Button\";\n\nfunction Header({\n  userAddress,\n  userAddressDetailsUrl,\n  isMetamaskDefined,\n  connectToMetamask,\n}) {\n  return (\n    <HeaderContainer>\n      <StyledToolbar>\n        {isMetamaskDefined ? (\n          <Typography>\n            <AddressLabel\n              address={userAddress}\n              ariaLabel={\"your address\"}\n              etherscanLink={userAddressDetailsUrl}\n              showCopyIntoClipboardButton\n              iconSize=\"small\"\n            />\n          </Typography>\n        ) : (\n          <Button onClick={connectToMetamask}>Connect To Metamask</Button>\n        )}\n      </StyledToolbar>\n    </HeaderContainer>\n  );\n}\n\nexport default Header;\n\nconst HeaderContainer = styled(AppBar)({\n  height: \"64px\",\n});\n\nconst StyledToolbar = styled(Toolbar)({\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  maxWidth: \"1200px\",\n  width: \"100%\",\n  margin: \"0 auto\",\n});\n","export default __webpack_public_path__ + \"static/media/Counter.8f97daec.sol\";","const BASE_PATHNAME = process.env.PUBLIC_URL;\n\nexport const DEPLOY_CONTRACT_PATH = `${BASE_PATHNAME}/deploy-contract`;\nexport const HOME_PATH = `${BASE_PATHNAME}/`;\n","import { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport CounterContractJSON from \"../artifacts/src/contracts/Counter.sol/Counter.json\";\nimport { HOME_PATH } from \"../routes/routes\";\n\nfunction useContractDeployment(\n  metamaskInstance,\n  isMetamaskDefined,\n  userAddress\n) {\n  const navigate = useNavigate();\n  const [transactionDeploymentHash, setTransactionDeploymentHash] = useState();\n  const [contractAddress, setContractAddress] = useState();\n\n  const deployContract = () => {\n    if (isMetamaskDefined) {\n      const newCounterContract = new metamaskInstance.eth.Contract(\n        CounterContractJSON.abi\n      );\n      newCounterContract\n        .deploy({\n          data: CounterContractJSON.bytecode,\n        })\n        .send({\n          from: userAddress,\n        })\n        .on(\"error\", function (error) {\n          // TODO: Add deploy contract error\n          console.log(\"Error: \", error);\n        })\n        .on(\"transactionHash\", function (transactionDeploymentHash) {\n          console.log(\"transactionDeploymentHash: \", transactionDeploymentHash);\n          setTransactionDeploymentHash(transactionDeploymentHash);\n        })\n        .on(\"receipt\", function (receipt) {\n          console.log(receipt.contractAddress); // contains the new contract address\n          setContractAddress(receipt.contractAddress);\n        })\n        // .on(\"confirmation\", function (confirmationNumber, receipt) {\n        //   console.log(\"confirmationNumber: \", confirmationNumber);\n        // })\n        .then(function (newContractInstance) {\n          console.log(newContractInstance.options.address); // instance with the new contract address\n          setTransactionDeploymentHash();\n          setContractAddress(newContractInstance.options.address);\n          navigate(\n            `${HOME_PATH}?contractAddress=${newContractInstance.options.address}`\n          );\n        });\n    }\n  };\n\n  const isDeploymentLoading = !!transactionDeploymentHash;\n\n  const transactionDeploymentUrl = `${process.env.REACT_APP_ETHERSCAN_URL}/tx/${transactionDeploymentHash}`;\n\n  return {\n    deployContract,\n    transactionDeploymentHash,\n    isDeploymentLoading,\n    contractAddress,\n    transactionDeploymentUrl,\n  };\n}\n\nexport default useContractDeployment;\n","import CircularProgress from \"@mui/material/CircularProgress\";\nimport { styled } from \"@mui/system\";\n\nfunction Loader({ height, children }) {\n  return (\n    <LoaderContainer height={height}>\n      <CircularProgress />\n      {children ? <LabelContainer>{children}</LabelContainer> : null}\n    </LoaderContainer>\n  );\n}\n\nexport default Loader;\n\nconst LoaderContainer = styled(\"div\", {\n  shouldForwardProp: (prop) => prop !== \"height\",\n})((props) => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  height: props.height,\n  flexDirection: \"column\",\n}));\n\nconst LabelContainer = styled(\"div\")({\n  marginTop: \"16px\",\n});\n","import { useEffect, useState } from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport { styled } from \"@mui/system\";\n\nimport contractFile from \"../contracts/Counter.sol\";\nimport useContractDeployment from \"../hooks/useContractDeployment\";\nimport Loader from \"../components/Loader\";\nimport Button from \"../components/Button\";\nimport AddressLabel from \"../components/AddressLabel\";\n\nfunction DeployContractPage({\n  metamaskInstance,\n  isMetamaskDefined,\n  userAddress,\n}) {\n  const [contractCode, setContractCode] = useState();\n\n  useEffect(() => {\n    fetch(contractFile)\n      .then((r) => r.text())\n      .then((contractCode) => {\n        setContractCode(contractCode);\n      });\n  }, []);\n\n  const {\n    deployContract,\n    transactionDeploymentHash,\n    isDeploymentLoading,\n    // contractAddress,\n    transactionDeploymentUrl,\n  } = useContractDeployment(metamaskInstance, isMetamaskDefined, userAddress);\n\n  return (\n    <main>\n      <StyledPaper>\n        <Typography component={\"h2\"} variant={\"h5\"}>\n          Deploy your Counter Contract\n        </Typography>\n\n        {isDeploymentLoading ? (\n          <Loader height=\"300px\">\n            {\n              <div>\n                <Typography> Deploying your Counter contract...</Typography>\n                {transactionDeploymentHash && (\n                  <AddressLabel\n                    address={transactionDeploymentHash}\n                    ariaLabel=\"transaction deployment\"\n                    etherscanLink={transactionDeploymentUrl}\n                  />\n                )}\n              </div>\n            }\n          </Loader>\n        ) : (\n          <div>\n            <CodeContainer>\n              <code lang={\"solidity\"}>\n                {contractCode || <Loader height=\"300px\" />}\n              </code>\n            </CodeContainer>\n            <Button onClick={deployContract}>Deploy Counter</Button>\n          </div>\n        )}\n      </StyledPaper>\n    </main>\n  );\n}\n\nexport default DeployContractPage;\n\nconst StyledPaper = styled(Paper)({\n  padding: \"16px\",\n});\n\nconst CodeContainer = styled(\"pre\")({\n  margin: \"16px auto;\",\n  textAlign: \"left\",\n  backgroundColor: \"#001e3c\",\n  padding: \"16px\",\n  borderRadius: \"4px\",\n  border: \"1px solid #132f4c\",\n});\n","import { useCallback, useEffect, useState } from \"react\";\nimport CounterContractJSON from \"../artifacts/src/contracts/Counter.sol/Counter.json\";\n\nfunction useCounterContract(\n  metamaskInstance,\n  isMetamaskDefined,\n  userAddress,\n  contractAddress\n) {\n  const [counterContract, setCounterContract] = useState();\n  const [counter, setCounter] = useState();\n\n  const [pastEvents, setPastEvents] = useState([]);\n  const [newEvents, setNewEvents] = useState([]);\n\n  // load your selected Contract (based on contract address and ABI)\n  useEffect(() => {\n    if (isMetamaskDefined && contractAddress) {\n      const counterContract = new metamaskInstance.eth.Contract(\n        CounterContractJSON.abi,\n        contractAddress\n      );\n      setCounterContract(counterContract);\n    }\n\n    return () => {\n      setCounterContract();\n      setCounter();\n      setPastEvents([]);\n      setNewEvents([]);\n    };\n  }, [isMetamaskDefined, metamaskInstance, contractAddress]);\n\n  // update counter value with the current value\n  const updateCounter = useCallback(async () => {\n    if (counterContract) {\n      try {\n        const counter = await counterContract.methods.counter().call();\n        setCounter(counter);\n      } catch (e) {\n        // TODO: ADD LOAD COUNTER ERROR?\n        setCounterContract();\n      }\n    }\n  }, [counterContract]);\n\n  // update past events\n  const getPastContractEvents = useCallback(async () => {\n    if (counterContract) {\n      try {\n        counterContract.getPastEvents(\n          \"CounterChanged\",\n          { fromBlock: 0, toBlock: \"latest\" },\n          (error, events) => {\n            setPastEvents(events.reverse());\n            console.log(events);\n            console.log(error);\n          }\n        );\n      } catch (e) {\n        // TODO: ADD LOAD EVENTS ERROR\n        setPastEvents([]);\n      }\n    }\n  }, [counterContract]);\n\n  // update counter data\n  useEffect(() => {\n    updateCounter();\n  }, [updateCounter]);\n\n  // update event data\n  useEffect(() => {\n    getPastContractEvents();\n  }, [getPastContractEvents]);\n\n  const incrementCounter = useCallback(() => {\n    if (counterContract) {\n      counterContract.methods\n        .increment()\n        .send({\n          from: userAddress,\n        })\n        .on(\"transactionHash\", function (transactionHash) {\n          const newEvent = {\n            id: transactionHash,\n            isPending: true,\n            transactionHash,\n            returnValues: {\n              eventType: \"increment\",\n              userAddress,\n            },\n          };\n          setNewEvents((newEvents) => [newEvent, ...newEvents]);\n        });\n    }\n  }, [counterContract, userAddress]);\n\n  const decrementCounter = useCallback(() => {\n    if (counterContract) {\n      counterContract.methods\n        .decrement()\n        .send({\n          from: userAddress,\n        })\n        .on(\"transactionHash\", function (transactionHash) {\n          const newEvent = {\n            id: transactionHash,\n            isPending: true,\n            transactionHash,\n            returnValues: {\n              eventType: \"decrement\",\n              userAddress,\n            },\n          };\n          setNewEvents((newEvents) => [newEvent, ...newEvents]);\n        });\n    }\n  }, [counterContract, userAddress]);\n\n  const resetCounter = useCallback(() => {\n    if (counterContract) {\n      counterContract.methods\n        .reset()\n        .send({\n          from: userAddress,\n        })\n        .on(\"transactionHash\", function (transactionHash) {\n          const newEvent = {\n            id: transactionHash,\n            isPending: true,\n            transactionHash,\n            returnValues: {\n              eventType: \"reset\",\n              userAddress,\n            },\n          };\n          setNewEvents((newEvents) => [newEvent, ...newEvents]);\n        });\n    }\n  }, [counterContract, userAddress]);\n\n  // subscribe to CounterChanged event to update counter\n  useEffect(() => {\n    if (counterContract) {\n      counterContract.events\n        .allEvents({\n          event: \"CounterChanged\",\n        })\n        .on(\"data\", (event) => {\n          console.log(\"CounterChanged event: \", event);\n          setNewEvents((newEvents) => {\n            const filteredEvents = newEvents.filter(\n              (e) => event.transactionHash !== e.transactionHash\n            );\n\n            return [event, ...filteredEvents];\n          });\n          updateCounter();\n        })\n        .on(\"error\", (error, receipt) => {\n          console.log(\"CounterChanged error: \", error);\n          updateCounter();\n        });\n    }\n  }, [counterContract, updateCounter]);\n\n  const isCounterContractLoading = !!contractAddress && !counterContract;\n  const contractDetailsUrl = `${process.env.REACT_APP_ETHERSCAN_URL}/address/${contractAddress}`;\n\n  return {\n    counter,\n    pastEvents,\n    newEvents,\n\n    updateCounter,\n\n    incrementCounter,\n    decrementCounter,\n    resetCounter,\n\n    isCounterContractLoading,\n    contractDetailsUrl,\n  };\n}\n\nexport default useCounterContract;\n","import Typography from \"@mui/material/Typography\";\nimport { styled } from \"@mui/system\";\n\nfunction CounterDisplay({ children }) {\n  return (\n    <div>\n      <CounterLabel variant=\"h2\" component=\"span\">\n        {children}\n      </CounterLabel>\n    </div>\n  );\n}\n\nexport default CounterDisplay;\n\nconst CounterLabel = styled(Typography)(({ theme }) => ({\n  display: \"inline-block\",\n  padding: \"8px\",\n  margin: \"16px\",\n  backgroundColor: theme.palette.grey[800],\n  borderRadius: \"4px\",\n  border: \"1px solid\",\n  borderColor: theme.palette.divider,\n}));\n","import Paper from \"@mui/material/Paper\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Typography from \"@mui/material/Typography\";\nimport { styled } from \"@mui/system\";\nimport CheckCircleRoundedIcon from \"@mui/icons-material/CheckCircleRounded\";\n\nimport AddressLabel from \"./AddressLabel\";\n\nfunction ContractEvents({ pastEvents, newEvents }) {\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"contract event table\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\">Status</TableCell>\n            <TableCell align=\"center\">Method</TableCell>\n            <TableCell align=\"center\">User</TableCell>\n            <TableCell align=\"center\">Value</TableCell>\n            <TableCell align=\"left\">Transaction</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {[...newEvents, ...pastEvents].map((event) => (\n            <TableRow key={event.transactionHash}>\n              <TableCell align=\"center\">\n                {event.isPending ? (\n                  <CircularProgress size={24} />\n                ) : (\n                  <CheckCircleRoundedIcon color=\"success\" />\n                )}\n              </TableCell>\n              <TableCell align=\"center\">\n                {LabelByMethod[event.returnValues.eventType]}\n              </TableCell>\n              <TableCell align=\"center\">\n                <AddressLabel\n                  address={event.returnValues.userAddress}\n                  ariaLabel={\"user address\"}\n                  etherscanLink={`${process.env.REACT_APP_ETHERSCAN_URL}/address/${event.returnValues.userAddress}`}\n                  iconSize=\"small\"\n                />\n              </TableCell>\n              <TableCell align=\"center\">\n                {event.returnValues.counter || <PendingValue />}\n              </TableCell>\n              <TableCell align=\"center\">\n                <AddressLabel\n                  address={event.transactionHash}\n                  ariaLabel={\"Counter transaction\"}\n                  etherscanLink={`${process.env.REACT_APP_ETHERSCAN_URL}/tx/${event.transactionHash}`}\n                  iconSize=\"small\"\n                />\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default ContractEvents;\n\nconst IncrementLabel = styled(\"span\")(({ theme }) => ({\n  backgroundColor: theme.palette.success.dark,\n  color: theme.palette.success.contrastText,\n  padding: \"4px 8px\",\n  borderRadius: \"4px\",\n}));\n\nconst DecrementLabel = styled(\"span\")(({ theme }) => ({\n  backgroundColor: theme.palette.warning.main,\n  color: theme.palette.warning.contrastText,\n  padding: \"4px 8px\",\n  borderRadius: \"4px\",\n}));\n\nconst ResetLabel = styled(\"span\")(({ theme }) => ({\n  backgroundColor: theme.palette.error.main,\n  color: theme.palette.error.contrastText,\n  padding: \"4px 8px\",\n  borderRadius: \"4px\",\n}));\n\nfunction PendingValue() {\n  return <PendingValueLabel fontSize=\"small\">Pending...</PendingValueLabel>;\n}\n\nconst PendingValueLabel = styled(Typography)(({ theme }) => ({\n  backgroundColor: theme.palette.warning.light,\n  color: theme.palette.warning.contrastText,\n  padding: \"4px  6px\",\n  borderRadius: \"4px\",\n}));\n\nconst LabelByMethod = {\n  increment: <IncrementLabel>Increment</IncrementLabel>,\n  decrement: <DecrementLabel>Decrement</DecrementLabel>,\n  reset: <ResetLabel>Reset</ResetLabel>,\n};\n","import { useEffect, useState } from \"react\";\nimport { Link, useSearchParams } from \"react-router-dom\";\nimport TextField from \"@mui/material/TextField\";\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport { styled } from \"@mui/system\";\n\nimport { DEPLOY_CONTRACT_PATH } from \"./routes\";\nimport useCounterContract from \"../hooks/useCounterContract\";\nimport CounterDisplay from \"../components/CounterDisplay\";\nimport AddressLabel from \"../components/AddressLabel\";\nimport ContractEvents from \"../components/ContractEvents\";\n\nfunction ContractPage({ metamaskInstance, isMetamaskDefined, userAddress }) {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [contractAddressInput, setContractAddressInput] = useState(\n    () =>\n      searchParams.get(\"contractAddress\") ||\n      process.env.REACT_APP_CONTRACT_ADDRESS ||\n      \"\"\n  );\n\n  const [contractAddress, setContractAddress] = useState(\"\");\n\n  const {\n    counter,\n    pastEvents,\n    newEvents,\n    incrementCounter,\n    decrementCounter,\n    resetCounter,\n    isCounterContractLoading,\n    contractDetailsUrl,\n  } = useCounterContract(\n    metamaskInstance,\n    isMetamaskDefined,\n    userAddress,\n    contractAddress\n  );\n\n  // if an address is present in the query we update the input\n  useEffect(() => {\n    const contractAddress = searchParams.get(\"contractAddress\");\n\n    if (contractAddress) {\n      setContractAddressInput(contractAddress);\n    }\n  }, [searchParams]);\n\n  useEffect(() => {\n    const isValidAddress =\n      !!contractAddressInput &&\n      metamaskInstance?.utils.isAddress(contractAddressInput);\n\n    if (isValidAddress) {\n      setSearchParams({ contractAddress: contractAddressInput });\n      setContractAddress(contractAddressInput);\n    }\n  }, [contractAddressInput, metamaskInstance, setSearchParams]);\n\n  // TODO: ADD LOADING CONTRACT DATA\n\n  // TODO: ADD ERROR IN THE TEXT FIELD\n  // TODO: ADD ERROR IN THE SMART CONTRACT LOAD\n  return (\n    <div>\n      <StyledContainer>\n        <TextField\n          value={contractAddressInput}\n          onChange={(e) => {\n            const value = e.target.value;\n            setContractAddressInput(value);\n          }}\n          id=\"contract-address-field\"\n          label=\"Contract Address\"\n          variant=\"standard\"\n          fullWidth\n        />\n\n        <StyledText>\n          Or you can Deploy your own Counter Smart Contract in the{\" \"}\n          <StyledInternalLink to={DEPLOY_CONTRACT_PATH}>\n            Deployment Page.\n          </StyledInternalLink>\n        </StyledText>\n      </StyledContainer>\n\n      <main>\n        {isCounterContractLoading ? (\n          <div>Loading contract...</div>\n        ) : (\n          contractAddress && (\n            <>\n              <StyledCounterContainer elevation={4}>\n                <Typography component={\"h2\"} variant={\"h4\"} gutterBottom>\n                  Counter Contract\n                </Typography>\n\n                {/* Contract Address */}\n                <Typography component={\"h3\"} variant={\"h6\"} gutterBottom>\n                  <AddressLabel\n                    address={contractAddress}\n                    ariaLabel=\"contract address\"\n                    etherscanLink={contractDetailsUrl}\n                    showCopyIntoClipboardButton\n                    iconSize=\"small\"\n                  />\n                </Typography>\n\n                {/* Current Counter State */}\n                <CounterDisplay>{counter}</CounterDisplay>\n\n                {/* Contract Methods */}\n                <div>\n                  <Button onClick={decrementCounter}>Decrement</Button>\n                  <Button onClick={resetCounter}>Reset</Button>\n                  <Button onClick={incrementCounter}>Increment</Button>\n                </div>\n              </StyledCounterContainer>\n\n              <ContractEvents pastEvents={pastEvents} newEvents={newEvents} />\n            </>\n          )\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default ContractPage;\n\nconst StyledContainer = styled(Paper)({\n  margin: \"24px auto\",\n  padding: 24,\n});\n\nconst StyledText = styled(Typography)({\n  marginTop: \"16px\",\n  textAlign: \"left\",\n});\n\nconst StyledCounterContainer = styled(Paper)({\n  textAlign: \"center\",\n  margin: \"24px auto\",\n  padding: 16,\n});\n\nconst StyledInternalLink = styled(Link)({\n  color: \"rgb(102, 178, 255);\",\n});\n","import { Routes, Route, Navigate } from \"react-router-dom\";\nimport { styled } from \"@mui/system\";\n\nimport useMetamask from \"./hooks/useMetamask\";\nimport Header from \"./components/Header\";\nimport DeployContractPage from \"./routes/DeployContractPage\";\nimport { DEPLOY_CONTRACT_PATH, HOME_PATH } from \"./routes/routes\";\nimport { Typography } from \"@mui/material\";\nimport ContractPage from \"./routes/ContractPage\";\n\nfunction App() {\n  const {\n    metamaskInstance,\n    isMetamaskDefined,\n    userAddress,\n    userAddressDetailsUrl,\n    connectToMetamask,\n  } = useMetamask();\n\n  return (\n    <AppContainer>\n      <Header\n        userAddressDetailsUrl={userAddressDetailsUrl}\n        userAddress={userAddress}\n        isMetamaskDefined={isMetamaskDefined}\n        connectToMetamask={connectToMetamask}\n      />\n\n      <Typography component=\"h1\" variant=\"h2\" gutterBottom>\n        Counter in Solidity\n      </Typography>\n\n      <Routes>\n        <Route\n          path={HOME_PATH}\n          element={\n            <ContractPage\n              metamaskInstance={metamaskInstance}\n              isMetamaskDefined={isMetamaskDefined}\n              userAddress={userAddress}\n            />\n          }\n        />\n\n        <Route\n          path={DEPLOY_CONTRACT_PATH}\n          element={\n            <DeployContractPage\n              metamaskInstance={metamaskInstance}\n              isMetamaskDefined={isMetamaskDefined}\n              userAddress={userAddress}\n            />\n          }\n        />\n\n        {/* Unknown routes redirects to the home page */}\n        <Route path=\"*\" element={<Navigate to={HOME_PATH} replace={true} />} />\n      </Routes>\n    </AppContainer>\n  );\n}\n\nexport default App;\n\nconst AppContainer = styled(\"div\")({\n  margin: \"82px auto 0 auto\",\n  maxWidth: \"900px\",\n  textAlign: \"center\",\n});\n","import { CssBaseline, ThemeProvider } from \"@mui/material\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport customMuiTheme from \"./theme/theme\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={customMuiTheme}>\n      {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n      <CssBaseline />\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}