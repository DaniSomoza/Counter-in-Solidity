{"version":3,"sources":["theme/theme.js","hooks/useMetamask.js","components/AddressLabel.js","components/Button.js","components/Header.js","contracts/Counter.sol","routes/routes.js","hooks/useContractDeployment.js","components/Loader.js","routes/DeployContractPage.js","hooks/useCounterContract.js","components/CounterDisplay.js","components/ContractEvents.js","routes/ContractPage.js","hooks/useUserContractList.js","components/AppMenuDrawer.js","App.js","index.js"],"names":["customMuiTheme","responsiveFontSizes","createTheme","palette","mode","useMetamask","useState","metamaskInstance","setMetamaskInstance","userAddress","setUserAddress","connectToMetamask","useCallback","a","window","ethereum","request","method","accounts","params","chainId","Web3","currentProvider","on","eth","getAccounts","then","useEffect","isMetamaskDefined","isMetaMask","userAddressDetailsUrl","process","AddressLabel","address","ariaLabel","etherscanLink","showCopyIntoClipboardButton","iconSize","addressLabel","useMemo","firstPart","slice","lastPart","ADDRESS_LENGTH","Stack","direction","justifyContent","alignItems","spacing","component","Tooltip","title","IconButton","color","href","target","rel","style","marginLeft","fontSize","onClick","navigator","clipboard","writeText","StyledButton","styled","ButtonMui","margin","Button","children","variant","Header","setIsMenuOpen","HeaderContainer","StyledToolbar","open","MetamaskContainer","Typography","AppBar","height","display","flexDirection","Toolbar","flexGrow","BASE_PATHNAME","DEPLOY_CONTRACT_PATH","HOME_PATH","useContractDeployment","getUserContractList","navigate","useNavigate","transactionDeploymentHash","setTransactionDeploymentHash","contractAddress","setContractAddress","deployContract","Contract","CounterContractJSON","abi","deploy","data","bytecode","send","from","error","console","log","receipt","newContractInstance","options","isDeploymentLoading","transactionDeploymentUrl","Loader","LoaderContainer","CircularProgress","LabelContainer","shouldForwardProp","prop","props","marginTop","DeployContractPage","contractCode","setContractCode","fetch","contractFile","r","text","StyledPaper","CodeContainer","lang","Paper","padding","textAlign","backgroundColor","borderRadius","border","useCounterContract","counterContract","setCounterContract","counter","setCounter","pastEvents","setPastEvents","newEvents","setNewEvents","updateCounter","methods","call","getPastContractEvents","getPastEvents","fromBlock","toBlock","events","reverse","e","incrementCounter","increment","transactionHash","newEvent","id","isPending","returnValues","eventType","decrementCounter","decrement","resetCounter","reset","allEvents","event","filteredEvents","filter","isCounterContractLoading","contractDetailsUrl","CounterDisplay","CounterLabel","theme","grey","borderColor","divider","ContractEvents","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","map","size","LabelByMethod","prevCounter","newCounter","ValueLabel","PendingValue","IncrementLabel","success","dark","contrastText","DecrementLabel","warning","main","ResetLabel","PendingValueLabel","light","ContractPage","useSearchParams","searchParams","setSearchParams","get","contractAddressInput","setContractAddressInput","utils","isAddress","StyledContainer","TextField","value","onChange","label","fullWidth","StyledText","StyledInternalLink","to","StyledCounterContainer","elevation","gutterBottom","Link","CONTRACT_REGISTRY_ADDRESS","REACT_APP_CONTRACT_REGISTRY_ADDRESS","useUserContractList","contracts","setContracts","counterRegistryContract","setCounterRegistryContract","CounterRegistryContractJSON","findUserContracts","AppMenuDrawer","isOpen","StyledSwipeableDrawer","onOpen","onClose","DrawerContainer","AddressContainer","SwipeableDrawer","width","App","isMenuOpen","AppContainer","path","element","replace","maxWidth","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.997306c7.chunk.js","sourcesContent":["import { createTheme, responsiveFontSizes } from \"@mui/material/styles\";\n\nconst theme = {\n  palette: {\n    mode: \"dark\",\n  },\n};\n\nconst customMuiTheme = responsiveFontSizes(createTheme(theme));\n\nexport default customMuiTheme;\n","import { useState, useEffect, useCallback } from \"react\";\nimport Web3 from \"web3\";\n\nconst RINKEBY_CHAIN_ID = \"0x4\";\n\n// TODO: use recommended initialization\n// see: https://docs.metamask.io/guide/ethereum-provider.html#using-the-provider\n\nfunction useMetamask() {\n  const [metamaskInstance, setMetamaskInstance] = useState();\n  const [userAddress, setUserAddress] = useState();\n\n  const connectToMetamask = useCallback(async () => {\n    if (!window.ethereum) {\n      return;\n    }\n\n    // connect metamask\n    const accounts = await window.ethereum.request({\n      method: \"eth_requestAccounts\",\n    });\n\n    // select correct chain\n    await window.ethereum.request({\n      method: \"wallet_switchEthereumChain\",\n      params: [{ chainId: RINKEBY_CHAIN_ID }],\n    });\n\n    const userAddress = accounts[0];\n\n    const metamaskInstance = new Web3(window.ethereum);\n\n    setMetamaskInstance(metamaskInstance);\n    setUserAddress(userAddress);\n\n    // subscribe to accountsChanged event to update the current user address\n    metamaskInstance.currentProvider.on(\"accountsChanged\", () => {\n      metamaskInstance.eth.getAccounts().then((userAddress) => {\n        setUserAddress(userAddress[0]);\n      });\n    });\n\n    metamaskInstance.currentProvider.on(\"disconnect\", () => {\n      setUserAddress();\n      setMetamaskInstance();\n    });\n\n    return () => {\n      setUserAddress();\n      setMetamaskInstance();\n    };\n  }, []);\n\n  // Initialize Metamask instance if its present in the browser\n  useEffect(() => {\n    connectToMetamask();\n  }, [connectToMetamask]);\n\n  const isMetamaskDefined =\n    metamaskInstance?.currentProvider.isMetaMask && !!userAddress;\n\n  const userAddressDetailsUrl = `${process.env.REACT_APP_ETHERSCAN_URL}/address/${userAddress}`;\n\n  return {\n    metamaskInstance,\n    userAddress,\n    isMetamaskDefined,\n    userAddressDetailsUrl,\n    connectToMetamask,\n  };\n}\n\nexport default useMetamask;\n","import { useMemo } from \"react\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Stack from \"@mui/material/Stack\";\nimport IosShareIcon from \"@mui/icons-material/IosShare\";\nimport ContentCopyIcon from \"@mui/icons-material/ContentCopy\";\n\nconst ADDRESS_LENGTH = 42;\n\n// TODO: Support chain short name\n\nfunction AddressLabel({\n  address,\n  ariaLabel,\n  etherscanLink,\n  showCopyIntoClipboardButton,\n  iconSize,\n}) {\n  const addressLabel = useMemo(() => {\n    if (address) {\n      const firstPart = address.slice(0, 6);\n      const lastPart = address.slice(ADDRESS_LENGTH - 6);\n\n      return `${firstPart}...${lastPart}`;\n    }\n\n    return address;\n  }, [address]);\n\n  return (\n    <Stack\n      direction=\"row\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      spacing={2}\n      component=\"span\"\n    >\n      <Tooltip title={address}>\n        <span>{addressLabel}</span>\n      </Tooltip>\n\n      {/* Button to etherscan */}\n      {etherscanLink && (\n        <Tooltip title={`Show ${ariaLabel} details on Etherscan`}>\n          <IconButton\n            color=\"primary\"\n            aria-label={`Show ${ariaLabel} details on Etherscan`}\n            component=\"a\"\n            href={etherscanLink}\n            target=\"_blank\"\n            rel=\"noopener\"\n            style={{ marginLeft: 0 }}\n          >\n            <IosShareIcon fontSize={iconSize || \"small\"} />\n          </IconButton>\n        </Tooltip>\n      )}\n\n      {/* Button to Copy into clipboard */}\n      {showCopyIntoClipboardButton && (\n        <Tooltip title={`Copy ${ariaLabel} to clipboard`}>\n          <IconButton\n            color=\"primary\"\n            aria-label={`Copy ${ariaLabel} to clipboard`}\n            style={{ marginLeft: 0 }}\n            onClick={() => navigator?.clipboard?.writeText?.(address)}\n          >\n            <ContentCopyIcon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Stack>\n  );\n}\n\nexport default AddressLabel;\n","import ButtonMui from \"@mui/material/Button\";\nimport { styled } from \"@mui/system\";\n\nconst StyledButton = styled(ButtonMui)({\n  margin: 8,\n});\n\nfunction Button({ onClick, children }) {\n  return (\n    <StyledButton onClick={onClick} variant=\"contained\">\n      {children}\n    </StyledButton>\n  );\n}\n\nexport default Button;\n","import AppBar from \"@mui/material/AppBar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport { styled } from \"@mui/system\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\n\nimport AddressLabel from \"./AddressLabel\";\nimport Button from \"./Button\";\n\nfunction Header({\n  userAddress,\n  userAddressDetailsUrl,\n  isMetamaskDefined,\n  connectToMetamask,\n  setIsMenuOpen,\n}) {\n  return (\n    <HeaderContainer>\n      <StyledToolbar>\n        <IconButton\n          aria-label=\"open menu drawer\"\n          onClick={() => setIsMenuOpen((open) => !open)}\n        >\n          <MenuIcon />\n        </IconButton>\n\n        <MetamaskContainer>\n          {isMetamaskDefined ? (\n            <Typography>\n              <AddressLabel\n                address={userAddress}\n                ariaLabel={\"your address\"}\n                etherscanLink={userAddressDetailsUrl}\n                showCopyIntoClipboardButton\n                iconSize=\"small\"\n              />\n            </Typography>\n          ) : (\n            <Button onClick={connectToMetamask}>Connect To Metamask</Button>\n          )}\n        </MetamaskContainer>\n      </StyledToolbar>\n    </HeaderContainer>\n  );\n}\n\nexport default Header;\n\nconst HeaderContainer = styled(AppBar)({\n  height: \"64px\",\n  display: \"flex\",\n  flexDirection: \"row\",\n});\n\nconst StyledToolbar = styled(Toolbar)({\n  display: \"flex\",\n  flexGrow: 1,\n});\n\nconst MetamaskContainer = styled(\"div\")({\n  flexGrow: 1,\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n});\n","export default __webpack_public_path__ + \"static/media/Counter.c242d09c.sol\";","const BASE_PATHNAME = process.env.PUBLIC_URL;\n\nexport const DEPLOY_CONTRACT_PATH = `${BASE_PATHNAME}/deploy-contract`;\nexport const HOME_PATH = `${BASE_PATHNAME}/`;\n","import { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport CounterContractJSON from \"../artifacts/src/contracts/Counter.sol/Counter.json\";\nimport { HOME_PATH } from \"../routes/routes\";\n\nfunction useContractDeployment({\n  metamaskInstance,\n  isMetamaskDefined,\n  userAddress,\n  getUserContractList,\n}) {\n  const navigate = useNavigate();\n  const [transactionDeploymentHash, setTransactionDeploymentHash] = useState();\n  const [contractAddress, setContractAddress] = useState();\n\n  const deployContract = () => {\n    if (isMetamaskDefined) {\n      const newCounterContract = new metamaskInstance.eth.Contract(\n        CounterContractJSON.abi\n      );\n      newCounterContract\n        .deploy({\n          data: CounterContractJSON.bytecode,\n        })\n        .send({\n          from: userAddress,\n        })\n        .on(\"error\", function (error) {\n          // TODO: Add deploy contract error\n          console.log(\"Error: \", error);\n        })\n        .on(\"transactionHash\", function (transactionDeploymentHash) {\n          console.log(\"transactionDeploymentHash: \", transactionDeploymentHash);\n          setTransactionDeploymentHash(transactionDeploymentHash);\n        })\n        .on(\"receipt\", function (receipt) {\n          console.log(receipt.contractAddress); // contains the new contract address\n          setContractAddress(receipt.contractAddress);\n        })\n        // .on(\"confirmation\", function (confirmationNumber, receipt) {\n        //   console.log(\"confirmationNumber: \", confirmationNumber);\n        // })\n        .then(function (newContractInstance) {\n          console.log(newContractInstance.options.address); // instance with the new contract address\n          setTransactionDeploymentHash();\n          setContractAddress(newContractInstance.options.address);\n          getUserContractList();\n          navigate(\n            `${HOME_PATH}?contractAddress=${newContractInstance.options.address}`\n          );\n        });\n    }\n  };\n\n  const isDeploymentLoading = !!transactionDeploymentHash;\n\n  const transactionDeploymentUrl = `${process.env.REACT_APP_ETHERSCAN_URL}/tx/${transactionDeploymentHash}`;\n\n  return {\n    deployContract,\n    transactionDeploymentHash,\n    isDeploymentLoading,\n    contractAddress,\n    transactionDeploymentUrl,\n  };\n}\n\nexport default useContractDeployment;\n","import CircularProgress from \"@mui/material/CircularProgress\";\nimport { styled } from \"@mui/system\";\n\nfunction Loader({ height, children }) {\n  return (\n    <LoaderContainer height={height}>\n      <CircularProgress />\n      {children ? <LabelContainer>{children}</LabelContainer> : null}\n    </LoaderContainer>\n  );\n}\n\nexport default Loader;\n\nconst LoaderContainer = styled(\"div\", {\n  shouldForwardProp: (prop) => prop !== \"height\",\n})((props) => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  height: props.height,\n  flexDirection: \"column\",\n}));\n\nconst LabelContainer = styled(\"div\")({\n  marginTop: \"16px\",\n});\n","import { useEffect, useState } from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport { styled } from \"@mui/system\";\n\nimport contractFile from \"../contracts/Counter.sol\";\nimport useContractDeployment from \"../hooks/useContractDeployment\";\nimport Loader from \"../components/Loader\";\nimport Button from \"../components/Button\";\nimport AddressLabel from \"../components/AddressLabel\";\n\nfunction DeployContractPage({\n  metamaskInstance,\n  isMetamaskDefined,\n  userAddress,\n  getUserContractList,\n}) {\n  const [contractCode, setContractCode] = useState();\n\n  useEffect(() => {\n    fetch(contractFile)\n      .then((r) => r.text())\n      .then((contractCode) => {\n        setContractCode(contractCode);\n      });\n  }, []);\n\n  const {\n    deployContract,\n    transactionDeploymentHash,\n    isDeploymentLoading,\n    // contractAddress,\n    transactionDeploymentUrl,\n  } = useContractDeployment({\n    metamaskInstance,\n    isMetamaskDefined,\n    userAddress,\n    getUserContractList,\n  });\n\n  return (\n    <main>\n      <StyledPaper>\n        <Typography component={\"h2\"} variant={\"h5\"}>\n          Deploy your Counter Contract\n        </Typography>\n\n        {isDeploymentLoading ? (\n          <Loader height=\"300px\">\n            {\n              <div>\n                <Typography> Deploying your Counter contract...</Typography>\n                {transactionDeploymentHash && (\n                  <AddressLabel\n                    address={transactionDeploymentHash}\n                    ariaLabel=\"transaction deployment\"\n                    etherscanLink={transactionDeploymentUrl}\n                  />\n                )}\n              </div>\n            }\n          </Loader>\n        ) : (\n          <div>\n            <CodeContainer>\n              <code lang={\"solidity\"}>\n                {contractCode || <Loader height=\"300px\" />}\n              </code>\n            </CodeContainer>\n            <Button onClick={deployContract}>Deploy Counter</Button>\n          </div>\n        )}\n      </StyledPaper>\n    </main>\n  );\n}\n\nexport default DeployContractPage;\n\nconst StyledPaper = styled(Paper)({\n  padding: \"16px\",\n});\n\nconst CodeContainer = styled(\"pre\")({\n  margin: \"16px auto;\",\n  textAlign: \"left\",\n  backgroundColor: \"#001e3c\",\n  padding: \"16px\",\n  borderRadius: \"4px\",\n  border: \"1px solid #132f4c\",\n});\n","import { useCallback, useEffect, useState } from \"react\";\nimport CounterContractJSON from \"../artifacts/src/contracts/Counter.sol/Counter.json\";\n\nfunction useCounterContract(\n  metamaskInstance,\n  isMetamaskDefined,\n  userAddress,\n  contractAddress\n) {\n  const [counterContract, setCounterContract] = useState();\n  const [counter, setCounter] = useState();\n\n  const [pastEvents, setPastEvents] = useState([]);\n  const [newEvents, setNewEvents] = useState([]);\n\n  // load your selected Contract (based on contract address and ABI)\n  useEffect(() => {\n    if (isMetamaskDefined && contractAddress) {\n      const counterContract = new metamaskInstance.eth.Contract(\n        CounterContractJSON.abi,\n        contractAddress\n      );\n      setCounterContract(counterContract);\n    }\n\n    return () => {\n      setCounterContract();\n      setCounter();\n      setPastEvents([]);\n      setNewEvents([]);\n    };\n  }, [isMetamaskDefined, metamaskInstance, contractAddress]);\n\n  // update counter value with the current value\n  const updateCounter = useCallback(async () => {\n    if (counterContract) {\n      try {\n        const counter = await counterContract.methods.counter().call();\n        setCounter(counter);\n      } catch (e) {\n        // TODO: ADD LOAD COUNTER ERROR?\n        setCounterContract();\n      }\n    }\n  }, [counterContract]);\n\n  // update past events\n  const getPastContractEvents = useCallback(async () => {\n    if (counterContract) {\n      try {\n        counterContract.getPastEvents(\n          \"CounterChanged\",\n          { fromBlock: 0, toBlock: \"latest\" },\n          (error, events) => {\n            setPastEvents(events.reverse());\n            console.log(events);\n            console.log(error);\n          }\n        );\n      } catch (e) {\n        // TODO: ADD LOAD EVENTS ERROR\n        setPastEvents([]);\n      }\n    }\n  }, [counterContract]);\n\n  // update counter data\n  useEffect(() => {\n    updateCounter();\n  }, [updateCounter]);\n\n  // update event data\n  useEffect(() => {\n    getPastContractEvents();\n  }, [getPastContractEvents]);\n\n  const incrementCounter = useCallback(() => {\n    if (counterContract) {\n      counterContract.methods\n        .increment()\n        .send({\n          from: userAddress,\n        })\n        .on(\"transactionHash\", function (transactionHash) {\n          const newEvent = {\n            id: transactionHash,\n            isPending: true,\n            transactionHash,\n            returnValues: {\n              eventType: \"increment\",\n              userAddress,\n            },\n          };\n          setNewEvents((newEvents) => [newEvent, ...newEvents]);\n        });\n    }\n  }, [counterContract, userAddress]);\n\n  const decrementCounter = useCallback(() => {\n    if (counterContract) {\n      counterContract.methods\n        .decrement()\n        .send({\n          from: userAddress,\n        })\n        .on(\"transactionHash\", function (transactionHash) {\n          const newEvent = {\n            id: transactionHash,\n            isPending: true,\n            transactionHash,\n            returnValues: {\n              eventType: \"decrement\",\n              userAddress,\n            },\n          };\n          setNewEvents((newEvents) => [newEvent, ...newEvents]);\n        });\n    }\n  }, [counterContract, userAddress]);\n\n  const resetCounter = useCallback(() => {\n    if (counterContract) {\n      counterContract.methods\n        .reset()\n        .send({\n          from: userAddress,\n        })\n        .on(\"transactionHash\", function (transactionHash) {\n          const newEvent = {\n            id: transactionHash,\n            isPending: true,\n            transactionHash,\n            returnValues: {\n              eventType: \"reset\",\n              userAddress,\n            },\n          };\n          setNewEvents((newEvents) => [newEvent, ...newEvents]);\n        });\n    }\n  }, [counterContract, userAddress]);\n\n  // subscribe to CounterChanged event to update counter\n  useEffect(() => {\n    if (counterContract) {\n      counterContract.events\n        .allEvents({\n          event: \"CounterChanged\",\n        })\n        .on(\"data\", (event) => {\n          console.log(\"CounterChanged event: \", event);\n          setNewEvents((newEvents) => {\n            const filteredEvents = newEvents.filter(\n              (e) => event.transactionHash !== e.transactionHash\n            );\n\n            return [event, ...filteredEvents];\n          });\n          updateCounter();\n        })\n        .on(\"error\", (error, receipt) => {\n          console.log(\"CounterChanged error: \", error);\n          updateCounter();\n        });\n    }\n  }, [counterContract, updateCounter]);\n\n  const isCounterContractLoading = !!contractAddress && !counterContract;\n  const contractDetailsUrl = `${process.env.REACT_APP_ETHERSCAN_URL}/address/${contractAddress}`;\n\n  return {\n    counter,\n    pastEvents,\n    newEvents,\n\n    updateCounter,\n\n    incrementCounter,\n    decrementCounter,\n    resetCounter,\n\n    isCounterContractLoading,\n    contractDetailsUrl,\n  };\n}\n\nexport default useCounterContract;\n","import Typography from \"@mui/material/Typography\";\nimport { styled } from \"@mui/system\";\n\nfunction CounterDisplay({ children }) {\n  return (\n    <div>\n      <CounterLabel variant=\"h2\" component=\"span\">\n        {children}\n      </CounterLabel>\n    </div>\n  );\n}\n\nexport default CounterDisplay;\n\nconst CounterLabel = styled(Typography)(({ theme }) => ({\n  display: \"inline-block\",\n  padding: \"4px 8px\",\n  margin: \"16px\",\n  backgroundColor: theme.palette.grey[800],\n  borderRadius: \"4px\",\n  border: \"1px solid\",\n  borderColor: theme.palette.divider,\n}));\n","import Paper from \"@mui/material/Paper\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Typography from \"@mui/material/Typography\";\nimport Stack from \"@mui/material/Stack\";\nimport { styled } from \"@mui/system\";\nimport CheckCircleRoundedIcon from \"@mui/icons-material/CheckCircleRounded\";\nimport ArrowRightAltRoundedIcon from \"@mui/icons-material/ArrowRightAltRounded\";\n\nimport AddressLabel from \"./AddressLabel\";\n\nfunction ContractEvents({ pastEvents, newEvents }) {\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"contract event table\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\">Status</TableCell>\n            <TableCell align=\"center\">Method</TableCell>\n            <TableCell align=\"center\">User</TableCell>\n            <TableCell align=\"center\">Value</TableCell>\n            <TableCell align=\"left\">Transaction</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {[...newEvents, ...pastEvents].map((event) => (\n            <TableRow key={event.transactionHash}>\n              <TableCell align=\"center\">\n                {event.isPending ? (\n                  <CircularProgress size={24} />\n                ) : (\n                  <CheckCircleRoundedIcon color=\"success\" />\n                )}\n              </TableCell>\n              <TableCell align=\"center\">\n                {LabelByMethod[event.returnValues.eventType]}\n              </TableCell>\n              <TableCell align=\"center\">\n                <AddressLabel\n                  address={event.returnValues.userAddress}\n                  ariaLabel={\"user address\"}\n                  etherscanLink={`${process.env.REACT_APP_ETHERSCAN_URL}/address/${event.returnValues.userAddress}`}\n                  iconSize=\"small\"\n                />\n              </TableCell>\n              <TableCell align=\"center\">\n                {!!event.returnValues.prevCounter ||\n                !!event.returnValues.newCounter ? (\n                  <Stack\n                    direction=\"row\"\n                    alignItems=\"center\"\n                    justifyContent=\"center\"\n                  >\n                    <ValueLabel>{event.returnValues.prevCounter}</ValueLabel>{\" \"}\n                    <ArrowRightAltRoundedIcon />\n                    <ValueLabel>{event.returnValues.newCounter}</ValueLabel>\n                  </Stack>\n                ) : (\n                  <PendingValue />\n                )}\n              </TableCell>\n              <TableCell align=\"center\">\n                <AddressLabel\n                  address={event.transactionHash}\n                  ariaLabel={\"Counter transaction\"}\n                  etherscanLink={`${process.env.REACT_APP_ETHERSCAN_URL}/tx/${event.transactionHash}`}\n                  iconSize=\"small\"\n                />\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default ContractEvents;\n\nconst IncrementLabel = styled(\"span\")(({ theme }) => ({\n  backgroundColor: theme.palette.success.dark,\n  color: theme.palette.success.contrastText,\n  padding: \"4px 8px\",\n  borderRadius: \"4px\",\n}));\n\nconst DecrementLabel = styled(\"span\")(({ theme }) => ({\n  backgroundColor: theme.palette.warning.main,\n  color: theme.palette.warning.contrastText,\n  padding: \"4px 8px\",\n  borderRadius: \"4px\",\n}));\n\nconst ResetLabel = styled(\"span\")(({ theme }) => ({\n  backgroundColor: theme.palette.error.main,\n  color: theme.palette.error.contrastText,\n  padding: \"4px 8px\",\n  borderRadius: \"4px\",\n}));\n\nfunction PendingValue() {\n  return <PendingValueLabel fontSize=\"small\">Pending...</PendingValueLabel>;\n}\n\nconst PendingValueLabel = styled(Typography)(({ theme }) => ({\n  backgroundColor: theme.palette.warning.light,\n  color: theme.palette.warning.contrastText,\n  padding: \"4px  6px\",\n  borderRadius: \"4px\",\n}));\n\nconst LabelByMethod = {\n  increment: <IncrementLabel>Increment</IncrementLabel>,\n  decrement: <DecrementLabel>Decrement</DecrementLabel>,\n  reset: <ResetLabel>Reset</ResetLabel>,\n};\n\nconst ValueLabel = styled(Typography)(({ theme }) => ({\n  display: \"inline-block\",\n  padding: \"2px 4px\",\n  margin: \"4px\",\n  backgroundColor: theme.palette.grey[800],\n  borderRadius: \"4px\",\n  border: \"1px solid\",\n  borderColor: theme.palette.divider,\n}));\n","import { useEffect, useState } from \"react\";\nimport { Link, useSearchParams } from \"react-router-dom\";\nimport TextField from \"@mui/material/TextField\";\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport { styled } from \"@mui/system\";\n\nimport { DEPLOY_CONTRACT_PATH } from \"./routes\";\nimport useCounterContract from \"../hooks/useCounterContract\";\nimport CounterDisplay from \"../components/CounterDisplay\";\nimport AddressLabel from \"../components/AddressLabel\";\nimport ContractEvents from \"../components/ContractEvents\";\n\nfunction ContractPage({ metamaskInstance, isMetamaskDefined, userAddress }) {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [contractAddressInput, setContractAddressInput] = useState(\n    () =>\n      searchParams.get(\"contractAddress\") ||\n      process.env.REACT_APP_CONTRACT_ADDRESS ||\n      \"\"\n  );\n\n  const [contractAddress, setContractAddress] = useState(\"\");\n\n  const {\n    counter,\n    pastEvents,\n    newEvents,\n    incrementCounter,\n    decrementCounter,\n    resetCounter,\n    isCounterContractLoading,\n    contractDetailsUrl,\n  } = useCounterContract(\n    metamaskInstance,\n    isMetamaskDefined,\n    userAddress,\n    contractAddress\n  );\n\n  // if an address is present in the query we update the input\n  useEffect(() => {\n    const contractAddress = searchParams.get(\"contractAddress\");\n\n    if (contractAddress) {\n      setContractAddressInput(contractAddress);\n    }\n  }, [searchParams]);\n\n  useEffect(() => {\n    const isValidAddress =\n      !!contractAddressInput &&\n      metamaskInstance?.utils.isAddress(contractAddressInput);\n\n    if (isValidAddress) {\n      setSearchParams({ contractAddress: contractAddressInput });\n      setContractAddress(contractAddressInput);\n    }\n  }, [contractAddressInput, metamaskInstance, setSearchParams]);\n\n  // TODO: ADD LOADING CONTRACT DATA\n\n  // TODO: ADD ERROR IN THE TEXT FIELD\n  // TODO: ADD ERROR IN THE SMART CONTRACT LOAD\n  return (\n    <div>\n      <StyledContainer>\n        <TextField\n          value={contractAddressInput}\n          onChange={(e) => {\n            const value = e.target.value;\n            setContractAddressInput(value);\n          }}\n          id=\"contract-address-field\"\n          label=\"Contract Address\"\n          variant=\"standard\"\n          fullWidth\n        />\n\n        <StyledText>\n          Or you can Deploy your own Counter Smart Contract in the{\" \"}\n          <StyledInternalLink to={DEPLOY_CONTRACT_PATH}>\n            Deployment Page.\n          </StyledInternalLink>\n        </StyledText>\n      </StyledContainer>\n\n      <main>\n        {isCounterContractLoading ? (\n          <div>Loading contract...</div>\n        ) : (\n          contractAddress && (\n            <>\n              <StyledCounterContainer elevation={4}>\n                <Typography component={\"h2\"} variant={\"h4\"} gutterBottom>\n                  Counter Contract\n                </Typography>\n\n                {/* Contract Address */}\n                <Typography component={\"h3\"} variant={\"h6\"} gutterBottom>\n                  <AddressLabel\n                    address={contractAddress}\n                    ariaLabel=\"contract address\"\n                    etherscanLink={contractDetailsUrl}\n                    showCopyIntoClipboardButton\n                    iconSize=\"small\"\n                  />\n                </Typography>\n\n                {/* Current Counter State */}\n                <CounterDisplay>{counter}</CounterDisplay>\n\n                {/* Contract Methods */}\n                <div>\n                  <Button onClick={decrementCounter}>Decrement</Button>\n                  <Button onClick={resetCounter}>Reset</Button>\n                  <Button onClick={incrementCounter}>Increment</Button>\n                </div>\n              </StyledCounterContainer>\n\n              <ContractEvents pastEvents={pastEvents} newEvents={newEvents} />\n            </>\n          )\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default ContractPage;\n\nconst StyledContainer = styled(Paper)({\n  margin: \"24px auto\",\n  padding: 24,\n});\n\nconst StyledText = styled(Typography)({\n  marginTop: \"16px\",\n  textAlign: \"left\",\n});\n\nconst StyledCounterContainer = styled(Paper)({\n  textAlign: \"center\",\n  margin: \"24px auto\",\n  padding: 16,\n});\n\nconst StyledInternalLink = styled(Link)({\n  color: \"rgb(102, 178, 255);\",\n});\n","import { useCallback, useEffect, useState } from \"react\";\nimport CounterRegistryContractJSON from \"../artifacts/src/contracts/CounterRegistry.sol/CounterRegistry.json\";\n\nconst CONTRACT_REGISTRY_ADDRESS =\n  process.env.REACT_APP_CONTRACT_REGISTRY_ADDRESS;\n\nfunction useUserContractList({\n  isMetamaskDefined,\n  metamaskInstance,\n  userAddress,\n}) {\n  const [contracts, setContracts] = useState([]);\n  const [counterRegistryContract, setCounterRegistryContract] = useState([]);\n\n  useEffect(() => {\n    if (isMetamaskDefined && CONTRACT_REGISTRY_ADDRESS) {\n      const counterRegistryContract = new metamaskInstance.eth.Contract(\n        CounterRegistryContractJSON.abi,\n        CONTRACT_REGISTRY_ADDRESS\n      );\n      setCounterRegistryContract(counterRegistryContract);\n    }\n\n    return () => {\n      setContracts([]);\n      setCounterRegistryContract();\n    };\n  }, [isMetamaskDefined, metamaskInstance]);\n\n  const getUserContractList = useCallback(async () => {\n    if (counterRegistryContract && userAddress) {\n      try {\n        const contracts = await counterRegistryContract.methods\n          .findUserContracts(userAddress)\n          .call();\n        setContracts(contracts);\n      } catch (e) {\n        // TODO: ADD LOAD CONTRACTSs ERROR?\n        setContracts([]);\n      }\n    }\n  }, [counterRegistryContract, userAddress]);\n\n  useEffect(() => {\n    getUserContractList();\n  }, [getUserContractList]);\n\n  return {\n    contracts,\n    getUserContractList,\n  };\n}\n\nexport default useUserContractList;\n","import { Link } from \"react-router-dom\";\nimport SwipeableDrawer from \"@mui/material/SwipeableDrawer\";\nimport AddressLabel from \"./AddressLabel\";\nimport Typography from \"@mui/material/Typography\";\nimport { styled } from \"@mui/system\";\nimport { HOME_PATH } from \"../routes/routes\";\n\nconst drawerWidth = \"290px\";\n\nfunction AppMenuDrawer({ isOpen, contracts, setIsMenuOpen }) {\n  return (\n    <StyledSwipeableDrawer\n      open={isOpen}\n      onOpen={() => setIsMenuOpen(true)}\n      onClose={() => setIsMenuOpen(false)}\n    >\n      <DrawerContainer>\n        <Typography component=\"p\" variant=\"h5\" gutterBottom>\n          User Contracts\n        </Typography>\n        {contracts.map((contractAddress) => {\n          return (\n            <AddressContainer key={contractAddress}>\n              <AddressLabel address={contractAddress} />{\" \"}\n              <StyledInternalLink\n                onClick={() => {\n                  setIsMenuOpen(false);\n                }}\n                to={`${HOME_PATH}?contractAddress=${contractAddress}`}\n              >\n                Load Contract\n              </StyledInternalLink>\n            </AddressContainer>\n          );\n        })}\n      </DrawerContainer>\n    </StyledSwipeableDrawer>\n  );\n}\n\nexport default AppMenuDrawer;\n\nconst StyledSwipeableDrawer = styled(SwipeableDrawer)({\n  textAlign: \"center\",\n});\n\nconst DrawerContainer = styled(\"div\")({\n  width: drawerWidth,\n  padding: \"24px 0\",\n});\n\nconst AddressContainer = styled(\"div\")({\n  display: \"flex\",\n  justifyContent: \"space-evenly\",\n  padding: \"8px 0\",\n});\n\nconst StyledInternalLink = styled(Link)({\n  color: \"rgb(102, 178, 255);\",\n});\n","import { Routes, Route, Navigate } from \"react-router-dom\";\nimport { styled } from \"@mui/system\";\n\nimport useMetamask from \"./hooks/useMetamask\";\nimport Header from \"./components/Header\";\nimport DeployContractPage from \"./routes/DeployContractPage\";\nimport { DEPLOY_CONTRACT_PATH, HOME_PATH } from \"./routes/routes\";\nimport { Typography } from \"@mui/material\";\nimport ContractPage from \"./routes/ContractPage\";\nimport useUserContractList from \"./hooks/useUserContractList\";\nimport { useState } from \"react\";\nimport AppMenuDrawer from \"./components/AppMenuDrawer\";\n\nfunction App() {\n  const {\n    metamaskInstance,\n    isMetamaskDefined,\n    userAddress,\n    userAddressDetailsUrl,\n    connectToMetamask,\n  } = useMetamask();\n\n  const { contracts, getUserContractList } = useUserContractList({\n    isMetamaskDefined,\n    metamaskInstance,\n    userAddress,\n  });\n\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n  return (\n    <AppContainer>\n      <Header\n        userAddressDetailsUrl={userAddressDetailsUrl}\n        userAddress={userAddress}\n        isMetamaskDefined={isMetamaskDefined}\n        connectToMetamask={connectToMetamask}\n        setIsMenuOpen={setIsMenuOpen}\n      />\n\n      <AppMenuDrawer\n        isOpen={isMenuOpen}\n        setIsMenuOpen={setIsMenuOpen}\n        contracts={contracts}\n      />\n\n      <Typography component=\"h1\" variant=\"h2\" gutterBottom>\n        Counter in Solidity\n      </Typography>\n\n      <Routes>\n        <Route\n          path={HOME_PATH}\n          element={\n            <ContractPage\n              metamaskInstance={metamaskInstance}\n              isMetamaskDefined={isMetamaskDefined}\n              userAddress={userAddress}\n            />\n          }\n        />\n\n        <Route\n          path={DEPLOY_CONTRACT_PATH}\n          element={\n            <DeployContractPage\n              metamaskInstance={metamaskInstance}\n              isMetamaskDefined={isMetamaskDefined}\n              userAddress={userAddress}\n              getUserContractList={getUserContractList}\n            />\n          }\n        />\n\n        {/* Unknown routes redirects to the home page */}\n        <Route path=\"*\" element={<Navigate to={HOME_PATH} replace={true} />} />\n      </Routes>\n    </AppContainer>\n  );\n}\n\nexport default App;\n\nconst AppContainer = styled(\"div\")({\n  margin: \"82px auto 0 auto\",\n  maxWidth: \"900px\",\n  textAlign: \"center\",\n});\n","import { CssBaseline, ThemeProvider } from \"@mui/material\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport customMuiTheme from \"./theme/theme\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={customMuiTheme}>\n      {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n      <CssBaseline />\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}